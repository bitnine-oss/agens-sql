<chapter id="pgHintPlan">
    <title>pg_hint_plan</title>

    <para>
        <productname>pg_hint_plan</productname>은 질의문에 힌트 구문으로 실행 계획을 조작한다. <productname>pg_hint_plan</productname>은 <productname>PostgreSQL</productname> Version 9.1이상이 필요하다.
    </para>

    <para>
        <productname>PostgreSQL</productname>은 비용 기반 최적기(Cost-based Optimizer:CBO)를 사용한다. 실행기(Planner)는 SQL문의 가능한 실행 계획을 세우고 그중에서 가장 적은 비용의 실행 계획을 실행 한다. 하지만 선택된 실행 계획이 최적이라는 보장이 없다. 그렇기 때문에 <productname>pg_hint_plan</productname>은 실행기(Planner)에게 SQL문을 실행하기 위한 'hint'를 명시하여 사용자가 원하는 실행 계획을 하도록 할 수 있다. <productname>pg_hint_plan</productname>의 현재 버전은 1.1.3으로 1.1.3버전은 <productname>PostgreSQL</productname> 9.4.x 버전에서 사용할 수 있다.
    </para>

    <sect1 id="pg-hint-plan-setting">
        <title>설정</title>

        <sect2 id="pg-hint-plan-GUC">
            <title>GUC 설정 방법</title>

            <para>
                <productname>pg_hint_plan</productname>은 GUC 매개 변수를 변경 하는 방법은 크게 2가지가 있다. 하나는 <filename>postgres.conf</filename> 파일을 직접 변경하는 방법과 다른하나는 <command>psql</command> 내부에서 해당 쿼리에 대해서만 일시적으로 변경하는 방법이다. 전체 설정은 <filename>postgresql.conf</filename> 파일의 <command>shared_preload_libraries</command>를 작성함으로써 가능하다.
            </para>

            <itemizedlist>
                <listitem>
                    <para>
                        <filename>postgres.conf</filename> 파일 변경
                    </para>
                    <para>
                        GUC 설정을 변경 하기 위해서는 <filename>postgresql.conf</filename> 파일의 <command>shared_preload_libraries</command>을 이용하여 라이브러리를 설정 해주어야 한다. <command>'/path/to/pgsql/data/'</command> 하위의 <filename>postgresql.conf</filename> 파일의 <command>shared_preload_libraries</command>에 <command>pg_hint_plan</command>을 추가하여 다음과 같이 변경한다.
                    </para>
                    <para>
                        <screen>shared_preload_libraries = 'pg_hint_plan'               # (change requires restart)</screen>
                    </para>
                    <warning>
                        <para>
                            <filename>postgresql.conf</filename>파일의 <command>shared_preload_libraries</command>에 <command>pg_hint_plan</command>을 추가 할때 ' (작은따옴표)로 감싸 주어야한다. 또한 여러 종류의 인자를 넣을 때는 , (쉼표)로 구분해 주어야한다.
                        </para>
                    </warning>
                </listitem>

                <listitem>
                    <para>
                        GUC 매개 변수 임시 변경
                    </para>
                    <para>
                        <command>Set</command> 힌트는 계획동안 GUC 매개변수를 변경한다. Query Planning에 보여주는 GUC 매개변수는 planner 방법 구성 매개 변수의 다른 힌트와 충돌하지 않는 한 기대 효과를 가질 수 있다. 같은 GUC 매개 변수상에서 마지막 하나만 효과가 있다. <command>Set</command> 명령어를 이용한 GUC 매개 변수 임시 변경의 예는 다음 절에서 설명한다.
                    </para>
                </listitem>

            </itemizedlist>

        </sect2>

        <sect2>
            <title><command>LOAD</command> 명령을 사용한 설정</title>

            <para>
                <productname>pg_hint_plan</productname>은 <command>CREATE EXTENSION</command> 명령을 필요로 하지 않는다. 아래의 명령어와 같이 LOAD 명령으로 간단하게 사용이 가능하다.  
                <command>CREATE EXTENSION</command> 명령어를 사용할 경우 <command>pg_hint_plan.enable_hint_tables</command>를 계획할 힌트 테이블을 설정 해야 한다.
            </para>

            <para>
                <synopsis>agens=# LOAD 'pg_hint_plan';</synopsis>
                위의 SQL 명령어는 "LOAD" 명령어를 실행한 결과와 동일하다.
            </para>
        </sect2>

        <sect2>
            <title>GUC 설정 매개 변수</title>

            <para>
                GUC 매개변수들은 <productname>pg_hint_plan</productname>의 동작에 영향을 미친다. 매개변수는 <xref linkend="pg-hint-plan-guc-parameter">에 정의 되어 있다. 자세한 설정 방법은 <ulink url="http://www.postgresql.org/docs/9.4/static/runtime-config-custom.html#GUC-CUSTOM-VARIABLE-CLASSES"><productname>PostgreSQL</productname> 메뉴얼</ulink>을 참조하기 바란다.
            </para>

            <table id="pg-hint-plan-guc-parameter">
                <title>GUC 매개변수</title>
                <tgroup cols="3">
                    <thead>
                        <row>
                            <entry>매개 변수 이름</entry>
                            <entry>설명</entry>
                            <entry>Default</entry>
                        </row>
                    </thead>
                    <tbody>
                        <row>
                            <entry><command>pg_hint_plan.enable_hint</command></entry>
                            <entry>pg_hint_plan의 기능을 Enables 또는 disables 할 수 있다.</entry>
                            <entry>on</entry>
                        </row>
                        <row>
                            <entry><command>pg_hint_plan.debug_print</command></entry>
                            <entry>pg_hint_plan의 디버그 출력을 활성화 하고 선택한다. 사용가능 옵션은 off, on, detailed, verbose 이다.</entry>
                            <entry>off</entry>
                        </row>
                        <row>
                            <entry><command>pg_hint_plan.message_level</command></entry>
                            <entry>디버그 인쇄의 메시지 레벨을 지정한다. error, warning, notice, info, log, debug 옵션을 사용가능하다. fatal과 panic은 금지된다.</entry>
                            <entry>info</entry>
                        </row>
                    </tbody>
                </tgroup>
            </table>
        </sect2>

    </sect1>

    <sect1 id="pg-hint-plan-quickstart">
        <title>Quick Start</title>

        <sect2 id="pg-hint-plan-start">
            <title>pg_hint_plan 기본 사용법</title>

            <para>
                <productname>pg_hint_plan</productname>을 성공적으로 설치 & 설정 되었다면 <xref linkend="pg-hint-plan-activity-result">과 같이 테스트를 하였을 때 질의문에 작성된 힌트로 실행 계획이 동작되는 것을 확인 할 수 있다. 만약 정상적으로 설치 되어 있지 않다면 <xref linkend="pg-hint-plan-nonactivity-result">와 같이 CBO로 동작하는 것을 볼 수 있다.
            </para>

            <example id="pg-hint-plan-activity-result">
                <title>정상적으로 활성화 되었을 때의 결과</title>
                <programlisting>
agens=# /*+ hashjoin(a b) seqscan(a) */ explain select * from pgbench_branches b join pgbench_accounts a on b.bid = a.bid order by a.aid;
                    <computeroutput>

                                         QUERY PLAN                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Sort  (cost=33173.84..33423.84 rows=100000 width=461)
   Sort Key: a.aid
   ->  Hash Join  (cost=1.02..4016.02 rows=100000 width=461)
         Hash Cond: (a.bid = b.bid)
         ->  Seq Scan on pgbench_accounts a  (cost=0.00..2640.00 rows=100000 width=97)
         ->  Hash  (cost=1.01..1.01 rows=1 width=364)
               ->  Seq Scan on pgbench_branches b  (cost=0.00..1.01 rows=1 width=364)
(7 rows)
                    </computeroutput>
                </programlisting>
            </example>

            <example id="pg-hint-plan-nonactivity-result">
                <title>정상적으로 활성화 되지 않았을 때의 결과</title>
                <programlisting>
agens=# /*+ hashjoin(a b) seqscan(a) */ explain select * from pgbench_branches b join pgbench_accounts a on b.bid = a.bid order by a.aid;
                    <computeroutput>

                                         QUERY PLAN                    
------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 Nested Loop  (cost=0.29..5748.31 rows=100000 width=461)
   Join Filter: (b.bid = a.bid)
   ->  Index Scan using pgbench_accounts_pkey on pgbench_accounts a  (cost=0.29..4247.29 rows=100000 width=97)
   ->  Materialize  (cost=0.00..1.01 rows=1 width=364)
         ->  Seq Scan on pgbench_branches b  (cost=0.00..1.01 rows=1 width=364)
(5 rows)
                    </computeroutput>
                </programlisting>
            </example>
        </sect2>

    </sect1>

    <sect1 id="pg-hint-plan-hint-list">
        <title>힌트 목록</title>
        <para>
            <productname>pg_hint_plan</productname> 패키지로 사용할 수 있는 힌트의 목록은 다음과 같다.
        </para>

        <table id="pg-hint-plan-listed-table">
            <title>힌트 목록</title>
            <tgroup cols='3'>
                <thead>
                    <row>
                        <entry>Group</entry>
                        <entry>Format</entry>
                        <entry>설명</entry>
                    </row>
                </thead>
                <tbody>
                    <row>
                        <entry morerows='9' valign='middle'>Scan method</entry>
                        <entry><command>SeqScan(table)</command></entry>
                        <entry>테이블에 순차 검색 하도록 강제한다.</entry>
                    </row>
                    <row>
                        <entry><command>TidScan(table)</command></entry>
                        <entry>테이블에 TID로 검색하도록 강제한다.</entry>
                    </row>
                    <row>
                        <entry><command>IndexScan(table[ index...])</command></entry>
                        <entry>테이블에 인덱스 검색하도록 강제한다. 만약 인덱스가 있다면, 명시된 인덱스로 제한한다.</entry>
                    </row>
                    <row>
                        <entry><command>IndexOnlyScan(table[ index...])</command></entry>
                        <entry>* 테이블에 인덱스 만을 검색 하도록 강제한다.  만약 인덱스가 있다면, 명시된 인덱스로 제한한다. Index-only scan은<productname>PostgreSQL</productname> 9.2이상 버전에서 가능하다.</entry>
                    </row>
                    <row>
                        <entry><command>BitmapScan(table[ index...])</command></entry>
                        <entry>테이블에 비트맵 검색을 강제한다. 만약 명시된 인덱스가 있다면, 명시된 인덱스로 제한한다.</entry>
                    </row>
                    <row>
                        <entry><command>NoSeqScan(table)</command></entry>
                        <entry>테이블에 순차 검색을 하지 않도록 강제한다.</entry>
                    </row>
                    <row>
                        <entry><command>NoTidScan(table)</command></entry>
                        <entry>테이블에 TID 검색을 하지 않도록 강제한다.</entry>
                    </row>
                    <row>
                        <entry><command>NoIndexScan(table)</command></entry>
                        <entry>* 테이블에 인덱스 검색과 인덱스 자체 검색하지 않도록 강제한다. 인덱스 자체 검색은 <productname>PostgreSQL</productname> 9.2 이상에서 가능하다.</entry>
                    </row>
                    <row>
                        <entry><command>NoIndexOnlyScan(table)</command></entry>
                        <entry>* 테이블에 인덱스 자체 검색을 하지 않도록 강제한다. <productname>PostgreSQL</productname> 9.2 이상에서 가능하다.</entry>
                    </row>
                    <row>
                        <entry><command>NoBitmapScan(table)</command></entry>
                        <entry>테이블에 비트맵 검색을 하지 않도록 강제한다.</entry>
                    </row>
                    <row>
                        <entry morerows='5' valign='middle'>Join method</entry>
                        <entry><command>NestLoop(table table[ table...])</command></entry>
                        <entry>명시된 테이블들로 이루어진 조인에 중첩 반복 조인을 강제한다.</entry>
                    </row>
                    <row>
                        <entry><command>HashJoin(table table[ table...])</command></entry>
                        <entry>명시된 테이블들로 이루어진 조인에 해시 조인을 강제한다.</entry>
                    </row>
                    <row>
                        <entry><command>MergeJoin(table table[ table...])</command></entry>
                        <entry>명시된 테이블들로 이루어진 조인에 합병 조인을 강제한다.</entry>
                    </row>
                    <row>
                        <entry><command>NoNestLoop(table table[ table...])</command></entry>
                        <entry>명시된 테이블들로 이루어진 조인에 중첩 반복 조인을 하지 않도록 강제한다.</entry>
                    </row>
                    <row>
                        <entry><command>NoHashJoin(table table[ table...])</command></entry>
                        <entry>명시된 테이블들로 이루어진 조인에 해시 조인을 하지 않도록 강제한다.</entry>
                    </row>
                    <row>
                        <entry><command>NoMergeJoin(table table[ table...])</command></entry>
                        <entry>명시된 테이블들로 이루어진 조인에 합병 조인을 하지 않도록 강제한다.</entry>
                    </row>
                    <row>
                        <entry morerows='1' valign='middle'>Join order</entry>
                        <entry><command>Leading(table table[ table...])</command></entry>
                        <entry>명시된 대로 조인 순서를 강제한다.</entry>
                    </row>
                    <row>
                        <entry><command>Leading(&#60;join pair&#62;)</command></entry>
                        <entry>명시된 대로 조인 순서와 방향을 강제한다. join pair는 중첩 된 구조를 만들 수 있는 괄호로 둘러싸인 테이블 쌍 이거나 또는 다른 조인 쌍이다.</entry>
                    </row>
                    <row>
                        <entry><command>Row number correction</command></entry>
                        <entry><command>Rows(table table[ table...] correction)</command></entry>
                        <entry>* 명시된 테이블들로 이루어진 조인 결과의 열 번호를 정정한다. 가능한 방법에는  absolute (#&#60;n&#62;), addition (+&#60;n&#62;), subtract (-&#60;n&#62;) 그리고 multiplication (*&#60;n&#62;). &#60;n&#62; 은 strtod()가 읽기 가능한 문자열이다.</entry>
                    </row>
                    <row>
                        <entry>GUC</entry>
                        <entry><command>Set(GUC-param value)</command></entry>
                        <entry>planner가 동작하는 동안 GUC 매개 변수 값을 설정한다.</entry>
                    </row>
                </tbody>
            </tgroup>
        </table>
    </sect1>

</chapter>
