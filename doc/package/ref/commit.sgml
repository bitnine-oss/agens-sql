<!--
doc/src/sgml/ref/commit.sgml
PostgreSQL documentation
-->

<refentry id="SQL-COMMIT">
 <refmeta>
  <refentrytitle>COMMIT</refentrytitle>
  <manvolnum>7</manvolnum>
  <refmiscinfo>SQL - Language Statements</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>COMMIT</refname>
  <refpurpose>현재 트랜잭션을 커밋한다.</refpurpose>
 </refnamediv>

 <indexterm zone="sql-commit">
  <primary>COMMIT</primary>
 </indexterm>

 <refsynopsisdiv>
<synopsis>
COMMIT [ WORK | TRANSACTION ]
</synopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>설명</title>

  <para>
   <command>COMMIT</command> 명령은 현재 트랜잭션을 커밋한다.  모든
   변경 사항이 반영되어 다른 이들에게도 보이게 되며,  또한
   데이터베이스 장애 시에도 변경된 자료가 보장 되도록 처리한다.
  </para>
 </refsect1>

 <refsect1>
  <title>매개 변수</title>

  <variablelist>
   <varlistentry>
    <term><literal>WORK</literal></term>
    <term><literal>TRANSACTION</literal></term>
    <listitem>
     <para>
      선택적으로 사용할 수 있으나, 두 옵션 사이 차이는 없다.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1>
  <title>참고</title>

  <para>
   트랜잭션 내 작업에 대해서 취소하려면 
   <xref linkend="SQL-ROLLBACK"> 명령을 사용한다.
  </para>

  <para>
   트랜잭션 밖에서 <command>COMMIT</>  명령을 실행해도 
   아무런 영향을 주지는 않지만, 경고 메시지는 보여준다.
  </para>
 </refsect1>

 <refsect1>
  <title>예제</title>

  <para>
   현재 트랜잭션을 커밋하고, 변경 내용을 보관하려면:
<programlisting>
COMMIT;
</programlisting></para>
 </refsect1>

 <refsect1>
  <title>호환성</title>

  <para>
   표준 SQL에서는 <literal>COMMIT</literal>, <literal>COMMIT
   WORK</literal> 이 둘 만 지원한다. 물론 이 명령은 
   표준 그대로 제공한다.
  </para>
 </refsect1>

 <refsect1>
  <title>관련 항목</title>

  <simplelist type="inline">
   <member><xref linkend="sql-begin"></member>
   <member><xref linkend="sql-rollback"></member>
  </simplelist>
 </refsect1>
</refentry>
