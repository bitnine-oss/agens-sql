<sect1 id="pgpool-II-quick">
 <title>시작하기</title>
 <sect2 id="pgpool-II-quick-example">
<title>replication_mode</title>
 <para>pgpool은 어떠한 실행모드로 작동시키는가에 따라서 pgpool.conf와 같은 파일을 적절하게 작성해야 하며, 이 절에서는 단일 서버에 3개의 데이터베이스를 구성하여 replication_mode를 수행하는 예제를 소개한다.</para>
 <sect3><title>backend 데이터베이스 설정</title>
  <orderedlist>
      <listitem>
  <para>3개의 PostgreSQL backend를 생성한다.</para>
<screen><prompt>$ </prompt><userinput>initdb -U agens -D /path/to/Agens/pgsql/data1</userinput>
<prompt>$ </prompt><userinput>initdb -U agens -D /path/to/Agens/pgsql/data2</userinput></screen>
<para>/data 디렉토리에 생성되는 데이터베이스는 인스톨시에 생성되어 있으므로 생략한다.</para>
</listitem>
<listitem>
<para>
각각의 postgresql.conf에 port번호를 5456, 5457, 5458로 수정한다.
</para>
<screen>
<prompt>$ </prompt><userinput>vi /path/to/Agens/pgsql/data/postgresql.conf</userinput></screen>
<programlisting>
...
port = 5456
...
</programlisting>
<screen><prompt>$ </prompt><userinput>vi /path/to/Agens/pgsql/data1/postgresql.conf</userinput></screen>
<programlisting>
...
port = 5457
...
</programlisting>
<screen><prompt>$ </prompt><userinput>vi /path/to/Agens/pgsql/data2/postgresql.conf</userinput></screen>
<programlisting>
...
port = 5458
...
</programlisting>
</listitem>
<listitem>
    <para>데이터베이스 서버를 실행시킨다.</para>
<screen>
<prompt>$ </prompt><userinput>pg_ctl -D /path/to/Agens/pgsql/data start</userinput>
<prompt>$ </prompt><userinput>pg_ctl -D /path/to/Agens/pgsql/data1 start</userinput>
<prompt>$ </prompt><userinput>pg_ctl -D /path/to/Agens/pgsql/data2 start</userinput>
</screen>
</listitem>
</orderedlist>
</sect3>

<sect3><title>pgpool 설정</title>
<orderedlist>

<listitem>
<para>pgpool.conf 파일 생성</para>
<para>Agens SQL 인스톨러로 pgpool을 설치하면 /path/to/Agens_SQL/pgpool/etc 디렉터리에 pgpool.conf.sample과 같은 샘플 파일들이 있다. 이를 사용하면 손쉽게 pgpool.conf를 작성할 수 있다.</para>
<screen>
<prompt>$ </prompt><userinput>cp /path/to/Agens/pgpool/etc/pgpool.conf.sample vi /path/to/Agens/pgpool/etc/pgpool.conf</userinput>
</screen>
</listitem>



<listitem>
<para>pgpool.conf 파일 수정</para>
<screen>
<prompt>$ </prompt><userinput>vi /path/to/Agens/pgpool/etc/pgpool.conf</userinput>
</screen>
<para>backend 설정</para>
<programlisting>
backend_hostname0 = 'localhost'
backend_port0 = 5456
backend_weight0 = 1
backend_data_directory0 = '/path/to/Agens_SQL/pgsql/data'
backend_flag0 = 'ALLOW_TO_FAILOVER'

backend_hostname1 = 'localhost'
backend_port1 = 5457
backend_weight1 = 1
backend_data_directory1 = '/path/to/Agens_SQL/pgsql/data1'

backend_hostname2 = 'localhost'
backend_port2 = 5458
backend_weight2 = 1
backend_data_directory2 = '/path/to/Agens_SQL/pgsql/data2'
</programlisting>

<para>실행 모드를 설정하는 부분의 파라미터 값에 on을 넣는다.</para>
<programlisting>
...
connection_cache = on
...
replication_mode = on
...
load_balance_mode = on
...
master_slave_mode = off
...
</programlisting>
</listitem>
<listitem>
    <para>pgpool을 실행시킨다.</para>
        <para>다음의 명령어까지 수행하면 pgpool서버에 3개의 데이터베이스 노드가 replication된 상태가 된다.</para>
    <screen>
    <prompt>$ </prompt><userinput>pgpool -n -d -f /path/to/Agens/pgpool/etc/pgpool.conf > /path/to/Agens/pgpool/pgpool.log 2>&1 &</userinput></screen>
    <para>만약 pgpool을 종료하고 싶으면 다음의 명령어를 입력한다.</para>
    <screen><prompt>$ </prompt><userinput>pgpool -f /path/to/Agens/pgpool/etc/pgpool.conf stop</userinput></screen>
</listitem>
</orderedlist>
</sect3>

<sect3><title>replication 확인</title>
<para>pgpool에 bgbench를 이용하여 데이터를 생성하여 replication_mode가 정상적으로 작동하는지 확인 할 수 있다.</para>

<orderedlist>
<listitem>
    <para>복제할 데이터베이스를 작성한다. pgpool을 통해 bench_replication라는 이름의 데이터베이스가 모든 데이터베이스에 복제된다.</para>
    <screen><prompt>$ </prompt><userinput>createdb -U agens -p 9999 bench_replication</userinput></screen>
</listitem>
<listitem>
    <para>pgbench에 -i 옵션을 주어 실행한다. -i 옵션을 사전에 정의된 테이블과 데이터로 데이터베이스를 초기화 시킨다.</para>
    <screen>
<prompt>$ </prompt><userinput>pgbench -U agens -i -p 9999 bench_replication</userinput></screen>
</listitem>

<listitem>
    <para>다음은 모든 데이터베이스 노드의 정보를 보여주는 쉘스크립트이다. 이 스크립트는 pgbench가 생성한 branches, tellers, accounts, history 테이블이 보유한 행의 수를 출력한다.</para>
<screen><prompt>$ </prompt><userinput>for port in 5456 5457 5458; do
    echo $port
    for table_name in branches tellers accounts history; do
        echo $table_name
        ./bin/psql -U agens -c "SELECT count(*) FROM pgbench_$table_name" -p $port bench_replication
    done
done</userinput></screen>
</listitem>
</orderedlist>
</sect3>
  </sect2>
</sect1>