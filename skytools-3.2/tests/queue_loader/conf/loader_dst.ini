[queue_loader]

job_name = loader_dst
db = dbname=loaderdst
queue_name = loaderq

logfile = log/%(job_name)s.log
pidfile = pid/%(job_name)s.pid

rename_tables = 

[data.simple_tbl]
table_mode = direct

[data.bulk_tbl]
table_mode = direct
row_mode = bulk

[data.keep_all_tbl]
table_mode = split
row_mode = bulk
split_mode = by-date-field:tstamp

### Non-inherited partitions
split_part_template =
    create table %%(part)s (like %%(parent)s);
    alter table only %%(part)s add primary key (%%(pkey)s);

[data.keep_latest_tbl]
table_mode = split
row_mode = bulk
split_mode = by-date-field:tstamp

### Inherited partitions
split_part_template = 
    create table %%(part)s () inherits (%%(parent)s);
    alter table only %%(part)s add primary key (%%(pkey)s);


[DEFAULT]

# fields - which fields to send through
#fields = col1, col2, col3:renamed3
#fields = *

# table_mode - how to handle a table
#
# ignore - ignore this table
# direct - update table directly
# split - split data into partitions
#table_mode = ignore

# split_mode - how to split, if requested
#
# by-batch-time: use batch time for splitting
# by-event-time: use event time for splitting
# by-date-field:fld - use fld for splitting
#split_mode = by-batch-time

# split_part - partition name format
#
# %(table_name)s %(year)s %(month)s %(day)s %(hour)s
#split_part = %(table_name)s_%(year)s_%(month)s_%(day)s

# split_part_template - How to create new partition tables
#
# Available fields:
# %(part)s
# %(parent)s
# %(pkey)s
#
### Non-inherited partitions
#split_part_template =
#    create table %%(part)s (like %%(parent)s);
#    alter table only %%(part)s add primary key (%%(pkey)s);
#
### Inherited partitions
#split_part_template = 
#    create table %%(part)s () inherits (%%(parent)s);
#    alter table only %%(part)s add primary key (%%(pkey)s);


# row_mode - How to apply the events
#
# plain - each event creates SQL statement to run
# keep_latest - change updates to DELETE + INSERT
# keep_all - change updates to inserts, ignore deletes
# bulk - instead of statement-per-row, do bulk updates
#row_mode = plain


# bulk_mode - How to do the bulk update
#
# correct - inserts as COPY into table,
#           update as COPY into temp table and single UPDATE from there
#           delete as COPY into temp table and single DELETE from there
# delete - as 'correct', but do update as DELETE + COPY
# merged - as 'delete', but merge insert rows with update rows
#bulk_mode=correct

